name: Publish In github page

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Project
        run: pnpm run build

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: deploy_dist
          path: dist/apps/shell

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: deploy_dist
          path: dist/apps/shell

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GH_TOKEN }}  # Use built-in token
          branch: gh-pages  # Corrected branch name
          folder: dist/apps/shell  # Precise folder to deploy

      - name: Determine Next Version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Get the latest version tag
          LATEST_TAG=$(curl -s -H "Authorization: token $GH_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" | jq -r .tag_name)
          
          # If no previous tag exists, start at v1
          if [[ "$LATEST_TAG" == "null" ]]; then
            VERSION="v1"
          else
            # Extract the version number and increment it
            CURRENT_VERSION=${LATEST_TAG#v}
            NEXT_VERSION=$((CURRENT_VERSION + 1))
            VERSION="v$NEXT_VERSION"
          fi

          echo "version=$VERSION"  $GITHUB_OUTPUT
      - name: Create Git Tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "${{ steps.version.outputs.version }}"
          git push https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: "${{ steps.version.outputs.version }}"
          release_name: "Application Release ${{ steps.version.outputs.version }}"
          body: |
            ## Application Release ${{ steps.version.outputs.version }}
            
            This release contains the latest version of the application.
            
            Deployed to GitHub Pages at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
          draft: false
          prerelease: false
