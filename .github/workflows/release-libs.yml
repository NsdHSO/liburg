name: Release Libraries

on:
  push:
    branches:
      - master
    paths:
      - 'libs/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      ngx-liburg-changed: ${{ steps.check-changes.outputs.ngx-liburg-changed }}
      ngx-liburg-icon-changed: ${{ steps.check-changes.outputs.ngx-liburg-icon-changed }}
      ngx-liburg-frame-side-changed: ${{ steps.check-changes.outputs.ngx-liburg-frame-side-changed }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for checking changes
      
      - name: Check for library changes
        id: check-changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^libs/ngx-liburg/"; then
            echo "ngx-liburg-changed=true" >> $GITHUB_OUTPUT
          else
            echo "ngx-liburg-changed=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^libs/ngx-liburg-icon/"; then
            echo "ngx-liburg-icon-changed=true" >> $GITHUB_OUTPUT
          else
            echo "ngx-liburg-icon-changed=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^libs/ngx-liburg-frame-side/"; then
            echo "ngx-liburg-frame-side-changed=true" >> $GITHUB_OUTPUT
          else
            echo "ngx-liburg-frame-side-changed=false" >> $GITHUB_OUTPUT
          fi

  release-ngx-liburg:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ngx-liburg-changed == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Bump version
        id: bump-version
        run: |
          cd libs/ngx-liburg
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Parse version parts
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          
          # Update package.json
          pnpm version $NEW_VERSION --no-git-tag-version
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Update CHANGELOG.md
        run: |
          cd libs/ngx-liburg
          NEW_VERSION="${{ steps.bump-version.outputs.new_version }}"
          DATE=$(date +%Y-%m-%d)
          
          # Create new entry at the top of CHANGELOG.md
          sed -i "8i\\
          ## [$NEW_VERSION] - $DATE\\
          \\
          ### Changed\\
          - Automated release via GitHub Actions\\
          " CHANGELOG.md
      
      - name: Build library
        run: pnpm nx build ngx-liburg --configuration=production
      
      - name: Publish to npm
        run: |
          cd dist/libs/ngx-liburg
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add libs/ngx-liburg/package.json libs/ngx-liburg/CHANGELOG.md
          git commit -m "chore: bump ngx-liburg to ${{ steps.bump-version.outputs.new_version }}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}

  release-ngx-liburg-icon:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ngx-liburg-icon-changed == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Bump version
        id: bump-version
        run: |
          cd libs/ngx-liburg-icon
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Parse version parts
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          
          # Update package.json
          pnpm version $NEW_VERSION --no-git-tag-version
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Build library
        run: pnpm nx build ngx-liburg-icon --configuration=production
      
      - name: Publish to npm
        run: |
          cd dist/libs/ngx-liburg-icon
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add libs/ngx-liburg-icon/package.json
          git commit -m "chore: bump ngx-liburg-icon to ${{ steps.bump-version.outputs.new_version }}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}

  release-ngx-liburg-frame-side:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ngx-liburg-frame-side-changed == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Bump version
        id: bump-version
        run: |
          cd libs/ngx-liburg-frame-side
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Parse version parts
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          
          # Update package.json
          pnpm version $NEW_VERSION --no-git-tag-version
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Build library
        run: pnpm nx build ngx-liburg-frame-side --configuration=production
      
      - name: Publish to npm
        run: |
          cd dist/libs/ngx-liburg-frame-side
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add libs/ngx-liburg-frame-side/package.json
          git commit -m "chore: bump ngx-liburg-frame-side to ${{ steps.bump-version.outputs.new_version }}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
